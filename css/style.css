/** there are 2 types of animations in css one created using transition property and others using keyframes keyframes are more advanced  */
/* you can use animation with other states like hover focus etc they need not to be shown only when page loads */
@keyframes moveInLeft {
  /* 0% before animation starts and 100% when animation finishes */
  /* you can put any values of percentages you like */
  /* browser are optimized for only 2 properties to animate opacity and transform property but usign transform property you can do a whole lot of things */
  0% {
    opacity: 0;
    transform: translateX(-10rem);
    /* rotate3d(1, 2.0, 3.0, 10deg); */ }
  60% {
    transform: rotate(120deg); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  /* 0% before animation starts and 100% when animation finishes */
  /* you can put any values of percentages you like */
  /* browser are optimized for only 2 properties to animate opacity and transform property but usign transform property you can do a whole lot of things */
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  /* 0% before animation starts and 100% when animation finishes */
  /* you can put any values of percentages you like */
  /* browser are optimized for only 2 properties to animate opacity and transform property but usign transform property you can do a whole lot of things */
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

/*************************************************************  */
/* RESET */
/*************************************************************  */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* box-sizing: border-box; */
  /** this one is better practice , declaring box-sizing in body and inheriting from here  */
  box-sizing: inherit; }

html {
  /** 10/16 *100 */
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 1.6rem; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /** animations sometimes shakes up and down to fix that problem this is the fix  */
  /**allows to see us back part of the element  */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    /*! other properties */
    /** will wait for given amount of time before starting the animation */
    /* animation-delay: 2s; */
    /** this is the count you want animation to repeat  */
    /* animation-iteration-count: 3; */
    /** function for animation to appears like slow initially and faster later etc  */
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.75rem;
    font-weight: 700;
    /* animation-name: moveInRight; */
    /* animation-duration: 1s; */
    /* shorthand property for animation */
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-medium {
  margin-bottom: 8rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.btn {
  /* pseudo elements allows us to style element which are selected with pseudo elements */ }
  .btn:link, .btnvisited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    /* by default a element is inline */
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    /* this translate values are wrt to initial state  */
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn::after {
    /* content property is necessary for both after and before pseudo element */
    content: "";
    display: inline-block;
    /** this pseudo elements are treated as child of element here children of btn, so when we say height width 100% it means they will  take height width 100% of parent  i.e button   */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn .btn--animated {
    /* name, duration timing fxn, delay */
    animation: moveInBottom 0.5s ease-out .75s;
    /** backwards applys 0%  properties before animation starts  */
    animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all .3s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 5;
    transition: all .2s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      transform: scale(1.05) translateY(5px);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 10;
      outline: 1.5rem solid #55c57a; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 *((100% - 3 * 6rem) / 4) +  6rem); }
  .row .col-3-of-4 {
    width: calc(3 *((100% - 3 * 6rem) / 4) + 2* 6rem); }

.header {
  position: relative;
  height: 95vh;
  /* first one will be on top of second and so on */
  background-image: linear-gradient(to right, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  /** CLIP PATH: polygon accepts 4 coordinates which will give you polygon of any element, coordinate should be in clocwise direction (top left, top right, bottom right, bottom left)   */
  /*! this percentage values are wrt element, top left (0,0), top-center (50%,0), top-right(100%,0), bottom-right (100%,100%), bottom-left (0,100%) , bottom-center (50% 100%) */
  /**  you can use any units like %, rem, px, vh, vw etc  */
  /** use clippy tool to make your life easy  */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /** centering element i.e heading   */
    /* this value are with respect to element itself*/
    transform: translate(-50%, -50%);
    /* text align  centers all inline elements like a elements etc , this is also done for center the button in header as that is also an a element and it's inline */
    text-align: center; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
